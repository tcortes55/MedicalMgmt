@model MedicalMgmt.Models.Appointment

@{
    ViewBag.Title = "Detalhes da consulta";
}

<h2>Detalhes</h2>

<div>
    <h4>Consulta</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Paciente
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Patient.FullName)
        </dd>

        <dt>
            Médico
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Physician.AppUser.FullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Physician.Expertise)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Physician.Expertise)
        </dd>

        <dt>
            Usuário marcação
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AppUser.Username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RegistrationDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RegistrationDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlannedStartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlannedStartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlannedEndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlannedEndDate)
        </dd>

        @if (Model.PatientArrivingDate != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.PatientArrivingDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PatientArrivingDate)
            </dd>
        }

        @if (Model.ActualStartDate != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.ActualStartDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ActualStartDate)
            </dd>
        }
        
        @if (Model.ActualEndDate != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.ActualEndDate)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.ActualEndDate)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Status.StatusDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status.StatusDescription)
        </dd>
    </dl>

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Patient.Allergies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.Allergies, new { @class = "form-control onlyEditableWhenOngoing", @id = "allergies" })
            @Html.ValidationMessageFor(model => model.Patient.Allergies, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Patient.FamilyMedicalHistory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.FamilyMedicalHistory, new { @class = "form-control onlyEditableWhenOngoing", @id = "familyMedicalHistory" })
            @Html.ValidationMessageFor(model => model.Patient.FamilyMedicalHistory, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Patient.LongTermMedication, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.LongTermMedication, new { @class = "form-control onlyEditableWhenOngoing", @id = "longTermMedication" })
            @Html.ValidationMessageFor(model => model.Patient.LongTermMedication, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Anamnesis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Anamnesis, new { @class = "form-control onlyEditableWhenOngoing", @id = "anamnesis" })
            @Html.ValidationMessageFor(model => model.Anamnesis, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12">
            <button class="btn btn-primary" id="btnUpdatePatientInfo">Salvar <i class="glyphicon glyphicon-floppy-disk"></i></button>
        </div>
    </div>


    <div class="modal" id="modalChangeStatus">
        @{Html.RenderAction("ChangeStatus", "Appointments", new
        {
            @appointmentID = @Model.AppointmentID,
            @currStatusID = @Model.StatusID
        });
        }
    </div>
    <div class="modal" id="modalCancel">
        @{Html.RenderAction("Cancel", "Appointments", new
        {
            @id = @Model.AppointmentID
        });
        }
    </div>
    <div class="modal" id="modalSucess">
        @{Html.RenderPartial("_Success");}
    </div>

    @*Modals - medicine prescription*@
    <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Confirmar remoção</h4>
                </div>
                <div class="modal-body">
                    Tem certeza que deseja remover a prescrição? <span class="description"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                    <input type="submit" value="Remover" class="btn btn-danger btn-ok" id="btnConfirmDeleteMedicine" />
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="confirm-edit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Editar prescrição</h4>
                </div>
                <div class="modal-body">
                    Editar a prescrição?
                    <br />
                    <span class="description"></span>
                    @Html.TextArea("Posologia", new { @class = "form-control", @id = "posologyModal", @placeholder = "Posologia..." })
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <input type="submit" value="Confirmar alterações" class="btn btn-primary btn-ok" id="btnConfirmEditMedicine" />
                </div>
            </div>
        </div>
    </div>

    <hr />

    @*Modals - exam prescription*@
    <div class="modal fade" id="confirm-delete-exam" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Confirmar remoção</h4>
                </div>
                <div class="modal-body">
                    Tem certeza que deseja remover a prescrição? <span class="description"></span>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                    <input type="submit" value="Remover" class="btn btn-danger btn-ok" id="btnConfirmDeleteExam" />
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="confirm-edit-exam" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Editar prescrição</h4>
                </div>
                <div class="modal-body">
                    Editar a prescrição?
                    <br />
                    <span class="description"></span>
                    @Html.TextArea("Detalhes", new { @class = "form-control", @id = "examDetailsModal", @placeholder = "Detalhes do exame..." })
                    @Html.CheckBox("Enviar para o paciente", false, new { @class = "", @id = "examSendModal" })
                    <label for="examSendModal">Enviar para o paciente</label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                    <input type="submit" value="Confirmar alterações" class="btn btn-primary btn-ok" id="btnConfirmEditExam" />
                </div>
            </div>
        </div>
    </div>
    
    <div id="MedicinesByAppointment">
        @{Html.RenderAction("ListMedicinesByAppointment", "PrescriptedMedicines", new { appointmentID = Model.AppointmentID });}
    </div>
    <div class="onlyVisibleWhenOngoing">
        <div id="addPrescription">
            <select id="medicineSelector" class="selectpicker" data-live-search="true" title="Selecionar medicamento...">
                @foreach (var item in ViewBag.MedicineList)
                {
                    <option value="@item.MedicineID">@item.CommercialName (@item.GenericName)</option>
                }
            </select>
            @Html.TextArea("Posologia", new { @class = "form-control", @id = "posology", @placeholder = "Posologia..." })
        </div>
        <div class="col-md-12">
            <button class="btn btn-default" id="btnAddInline">Adicionar <i class="glyphicon glyphicon-plus"></i></button>
        </div>
    </div>

    <hr />

    <div id="ExamsByAppointment">
        @{Html.RenderAction("ListExamsByAppointment", "PrescriptedExams", new { appointmentID = Model.AppointmentID });}
    </div>
    <div class="onlyVisibleWhenOngoing">
        <div id="addExamPrescription">
            <select id="examSelector" class="selectpicker" data-live-search="true" title="Selecionar exame...">
                @foreach (var item in ViewBag.ExamList)
                {
                    <option value="@item.ExamID">@item.Name</option>
                }
            </select>
            @Html.TextArea("Detalhes", new { @class = "form-control", @id = "examDetails", @placeholder = "Detalhes do exame..." })
            @Html.CheckBox("Enviar para o paciente", false, new { @class = "", @id = "examSend" })
            <label for="examSend">Enviar para o paciente</label>
        </div>
        <div class="col-md-12">
            <button class="btn btn-default" id="btnAddExamInline">Adicionar <i class="glyphicon glyphicon-plus"></i></button>
        </div>
    </div>

        @if (@ViewBag.NextStatusID != null && @ViewBag.NextStatusID != MedicalMgmt.General.Constants.SS_AP_CANCELED)
        {
            <div>
                <hr />
                <div class="col-md-12">
                    <button class="btn btn-primary" id="btnChangeStatus">Alterar status para "@ViewBag.NextStatusDescription" <i class="glyphicon glyphicon-repeat"></i></button>
                </div>
                <div class="col-md-12">
                    <button class="btn btn-danger" id="btnCancel">Cancelar consulta <i class="glyphicon glyphicon-ban-circle"></i></button>
                </div>
            </div>
        }
        @*<div class="col-md-12">
                <p>
                    @Html.ActionLink("Voltar", null, null, null, new { href = Request.UrlReferrer })
                </p>
            </div>*@
    </div>
@Styles.Render("~/Content/bootstrap-select.min.css")
@section scripts{
<script src="~/Scripts/bootstrap-select.min.js"></script>
<script>
    $(document).ready(function () {
        //$.ajaxSetup({ cache: false });


        // Page initialization

        $(".selectpicker").selectpicker()
        checkMedicineButton();
        checkExamButton();

        $("#posology").keyup(function () {
            checkMedicineButton();
        });
        $("#medicineSelector").on("changed.bs.select", function (e) {
            checkMedicineButton();
        });

        $("#examDetails").keyup(function () {
            checkExamButton();
        });
        $("#examSelector").on("changed.bs.select", function (e) {
            checkExamButton();
        });



        // Checking if this is a new appointment

        var newAppointment = 0;
        newAppointment = @ViewBag.IsNewAppointment;
        if(newAppointment == 1)
        {
            $("#modalSucess").modal();
        }

        $(".onlyEditableWhenOngoing").prop("disabled", true)
        $(".onlyVisibleWhenOngoing").addClass("hidden")
        $("#btnUpdatePatientInfo").addClass("hidden")
        $("#btnAddInline").addClass("hidden")




        // Checking if this is an ongoing appointment

        var statusOngoing = @MedicalMgmt.General.Constants.SS_AP_ONGOING

        if (@Model.StatusID == statusOngoing)
        {
            $(".onlyEditableWhenOngoing").prop("disabled", false)
            $(".onlyVisibleWhenOngoing").removeClass("hidden")
            $("#btnUpdatePatientInfo").removeClass("hidden")
            $("#btnAddInline").removeClass("hidden")
            $("#btnAddExamInline").removeClass("hidden")
        }



        // Appointment status modification

        $("#btnChangeStatus").click(function() {
            $("#modalChangeStatus").modal();
        });

        $("#btnConfirmChangeStatus").click(function () {

            if (@Model.StatusID == statusOngoing)
            {
                $.ajax({
                    method: "POST",
                    url: "/Appointments/UpdatePatientInfo/",
                    data: {
                        appointmentID : @Model.AppointmentID,
                        allergies : $("#allergies").val(),
                        familyMedicalHistory : $("#familyMedicalHistory").val(),
                        longTermMedication : $("#longTermMedication").val(),
                        anamnesis : $("#anamnesis").val()
                    },
                    success: function () {
                        $.ajax({
                            method: "POST",
                            url: "/Appointments/ConfirmChangeStatus/",
                            data: {
                                appointmentID : @Model.AppointmentID,
                                currStatusID : @Model.StatusID
                                },
                            success: function () {
                                location.reload();
                            }
                        })
                    }
                })
            }
            else
            {
                $.ajax({
                    method: "POST",
                    url: "/Appointments/ConfirmChangeStatus/",
                    data: {
                        appointmentID : @Model.AppointmentID,
                        currStatusID : @Model.StatusID
                        },
                    success: function () {
                        location.reload();
                    }
                })
            }
        });




        // Appointment cancellation

        $("#btnCancel").click(function () {
            $("#modalCancel").modal();
        });

        $("#btnConfirmCancel").click(function () {
            $.ajax({
                method: "POST",
                url: "/Appointments/ConfirmCancel/",
                data: {
                    id : @Model.AppointmentID
                    },
                success: function () {
                    $("#modalCancel").modal("hide");
                    $(".refresh").click(function () {
                        window.location.replace("/Home/Index");
                    });
                    $("#modalSucess").modal();
                }
            })
        });




        // Patient info update

        $("#btnUpdatePatientInfo").click(function () {
            $.ajax({
                method: "POST",
                url: "/Appointments/UpdatePatientInfo/",
                data: {
                    appointmentID : @Model.AppointmentID,
                    allergies : $("#allergies").val(),
                    familyMedicalHistory : $("#familyMedicalHistory").val(),
                    longTermMedication : $("#longTermMedication").val(),
                    anamnesis : $("#anamnesis").val()
                },
                success: function () {
                    $("#modalSucess").modal();
                }
            })
        });





        //Prescribed medicines section

        $("#btnAddInline").click(function () {
            $("#btnAddInline").attr("disabled", true);
            $.ajax({
                method: "POST",
                url: "/PrescriptedMedicines/Add/",
                data: {
                    appointmentID : @Model.AppointmentID,
                    medicineID : $("#medicineSelector").val(),
                    posology : $("#posology").val()
                },
                success: function (){
                    $("#medicineSelector").val("default");
                    $("#medicineSelector").selectpicker("refresh");
                    $("#posology").val([]);
                    reloadPrescribedMedicines();
                },
                complete: function (){
                    checkMedicineButton();
                }
            })
        });


        $('#confirm-delete').on('click', '#btnConfirmDeleteMedicine', function(e) {
            var $modalDiv = $(e.delegateTarget);
            var id = $(this).data('itemId');
            $modalDiv.addClass('loading');
            $.post('/PrescriptedMedicines/Delete/' + id).then(function () {
                $modalDiv.modal('hide').removeClass('loading');
                reloadPrescribedMedicines();
            });
        });
        $('#confirm-delete').on('show.bs.modal', function(e) {
            var data = $(e.relatedTarget).data();
            $('.description', this).text(data.itemDescription);
            $('#btnConfirmDeleteMedicine', this).data('itemId', data.itemId);
        });


        $('#confirm-edit').on('click', '#btnConfirmEditMedicine', function(e) {
            var $modalDiv = $(e.delegateTarget);
            var id = $(this).data('itemId');
            $modalDiv.addClass('loading');
            $.post('/PrescriptedMedicines/Edit/' + id, { posology: $("#posologyModal").val() }).then(function () {
                $modalDiv.modal('hide').removeClass('loading');
                reloadPrescribedMedicines();
            });
        });
        $('#confirm-edit').on('show.bs.modal', function(e) {
            var data = $(e.relatedTarget).data();
            $('.description', this).text(data.itemDescription);
            $('#posologyModal', this).val(data.itemPosology);
            $('#btnConfirmEditMedicine', this).data('itemId', data.itemId);
        });




        // Prescribed exams section
        
        $("#btnAddExamInline").click(function () {
            $("#btnAddExamInline").attr("disabled", true);
            $.ajax({
                method: "POST",
                url: "/PrescriptedExams/Add/",
                data: {
                    appointmentID: @Model.AppointmentID,
                    examID: $("#examSelector").val(),
                    examDetails: $("#examDetails").val(),
                    examSend: $('#examSend').prop('checked')
                },
                success: function (){
                    $("#examSelector").val("default");
                    $("#examSelector").selectpicker("refresh");
                    $("#examDetails").val([]);
                    $("#examSend").val([]);
                    reloadPrescribedExams();
                },
                complete: function (){
                    checkExamButton();
                }
            })
        });


        $('#confirm-delete-exam').on('click', '#btnConfirmDeleteExam', function(e) {
            var $modalDiv = $(e.delegateTarget);
            var id = $(this).data('itemId');
            $modalDiv.addClass('loading');
            $.post('/PrescriptedExams/Delete/' + id).then(function () {
                $modalDiv.modal('hide').removeClass('loading');
                reloadPrescribedExams();
            });
        });
        $('#confirm-delete-exam').on('show.bs.modal', function(e) {
            var data = $(e.relatedTarget).data();
            $('.description', this).text(data.itemDescription);
            $('#btnConfirmDeleteExam', this).data('itemId', data.itemId);
        });


        $('#confirm-edit-exam').on('click', '#btnConfirmEditExam', function(e) {
            var $modalDiv = $(e.delegateTarget);
            var id = $(this).data('itemId');
            $modalDiv.addClass('loading');

            var a1 = $('#examDetailsModal').val() ;
            var a2 = $('#examSendModal').prop('checked');

            $.post('/PrescriptedExams/Edit/' + id,
                    {
                        examDetails: a1,
                        examSend: a2
                    }).then(function () {
                        $modalDiv.modal('hide').removeClass('loading');
                        reloadPrescribedExams();
                    });
        });
        $('#confirm-edit-exam').on('show.bs.modal', function(e) {
            var data = $(e.relatedTarget).data();
            $('.description', this).text(data.itemDescription);
            $('#examDetailsModal', this).val(data.itemExamDetails);
            $('#examSendModal', this).prop('checked', (data.itemExamSend.toLowerCase() === 'true' ));
            $('#btnConfirmEditExam', this).data('itemId', data.itemId);
        });




        // Miscellaneous functions

        function reloadPrescribedMedicines() {
            $.ajax(
            {
                type: 'GET',
                url: '/PrescriptedMedicines/ListMedicinesByAppointment',
                data: {
                    appointmentID: @Model.AppointmentID
                    },
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    $('#MedicinesByAppointment').html(data);
                }
            });
        }

        function checkMedicineButton() {
            if ($("#medicineSelector").val() && $("#posology").val())
            {
                $("#btnAddInline").attr("disabled", false);
            }
            else {
                $("#btnAddInline").attr("disabled", true);
            }
        }


        function reloadPrescribedExams() {
            $.ajax(
            {
                type: 'GET',
                url: '/PrescriptedExams/ListExamsByAppointment',
                data: {
                    appointmentID: @Model.AppointmentID
                    },
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    $('#ExamsByAppointment').html(data);
                }
            });
        }

        function checkExamButton() {
            if ($("#examSelector").val() && $("#examDetails").val())
            {
                $("#btnAddExamInline").attr("disabled", false);
            }
            else {
                $("#btnAddExamInline").attr("disabled", true);
            }
        }
    })
</script>
}
