@model MedicalMgmt.Models.Appointment

@{
    ViewBag.Title = "Detalhes da consulta";
}

<h2>Detalhes</h2>

<div>
    <h4>Consulta</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Paciente
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Patient.FullName)
        </dd>

        <dt>
            Médico
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Physician.AppUser.FullName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Physician.Expertise)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Physician.Expertise)
        </dd>

        <dt>
            Usuário marcação
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AppUser.Username)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.RegistrationDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RegistrationDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlannedStartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlannedStartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlannedEndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlannedEndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PatientArrivingDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PatientArrivingDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ActualStartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ActualStartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ActualEndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ActualEndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status.StatusDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status.StatusDescription)
        </dd>
    </dl>

    <hr />

    <div class="form-group">
        @Html.LabelFor(model => model.Patient.Allergies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.Allergies, new { @class = "form-control onlyWhenOngoing", @id = "allergies" })
            @Html.ValidationMessageFor(model => model.Patient.Allergies, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Patient.FamilyMedicalHistory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.FamilyMedicalHistory, new { @class = "form-control onlyWhenOngoing", @id = "familyMedicalHistory" })
            @Html.ValidationMessageFor(model => model.Patient.FamilyMedicalHistory, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Patient.LongTermMedication, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Patient.LongTermMedication, new { @class = "form-control onlyWhenOngoing", @id = "longTermMedication" })
            @Html.ValidationMessageFor(model => model.Patient.LongTermMedication, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Anamnesis, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-12" data-toggle="tooltip" title="Editável somente durante uma consulta em andamento">
            @Html.TextAreaFor(model => model.Anamnesis, new { @class = "form-control onlyWhenOngoing", @id = "anamnesis" })
            @Html.ValidationMessageFor(model => model.Anamnesis, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12">
            <button class="btn btn-primary" id="btnUpdatePatientInfo">Salvar <i class="glyphicon glyphicon-floppy-disk"></i></button>
        </div>
    </div>
    <div class="modal" id="modalChangeStatus">
        @{Html.RenderAction("ChangeStatus", "Appointments", new
        {
            @appointmentID = @Model.AppointmentID,
            @currStatusID = @Model.StatusID
        });
        }
    </div>
    <div class="modal" id="modalCancel">
        @{Html.RenderAction("Cancel", "Appointments", new
        {
            @id = @Model.AppointmentID
        });
        }
    </div>
    <div class="modal" id="modalSucess">
        @{Html.RenderPartial("_Success");}
    </div>
    
    <hr />
    <div id="MedicinesByAppointment">
        @{Html.RenderAction("ListMedicinesByAppointment", "PrescriptedMedicines", new { appointmentID = Model.AppointmentID });}
    </div>


    @if (@ViewBag.NextStatusID != null && @ViewBag.NextStatusID != MedicalMgmt.General.Constants.SS_AP_CANCELED)
    {
        <div>
            <hr />
            <div class="col-md-12">
                <button class="btn btn-primary" id="btnChangeStatus">Alterar status para "@ViewBag.NextStatusDescription" <i class="glyphicon glyphicon-repeat"></i></button>
            </div>
            <div class="col-md-12">
                <button class="btn btn-danger" id="btnCancel">Cancelar consulta <i class="glyphicon glyphicon-ban-circle"></i></button>
            </div>
        </div>
    }
    @*<div class="col-md-12">
        <p>
            @Html.ActionLink("Voltar", null, null, null, new { href = Request.UrlReferrer })
        </p>
    </div>*@
</div>
@Styles.Render("~/Content/bootstrap-select.min.css")
@section scripts{
<script src="~/Scripts/bootstrap-select.min.js"></script>
<script>
$(document).ready(function () {

    var newAppointment = 0;
    newAppointment = @ViewBag.IsNewAppointment;
    if(newAppointment == 1)
    {
        $("#modalSucess").modal();
    }

    $(".onlyWhenOngoing").prop("disabled", true)
    $("#btnUpdatePatientInfo").addClass("hidden")

    var statusOngoing = @MedicalMgmt.General.Constants.SS_AP_ONGOING

    if (@Model.StatusID == statusOngoing)
    {
        $(".onlyWhenOngoing").prop("disabled", false)
        $("#btnUpdatePatientInfo").removeClass("hidden")
    }

    $("#btnChangeStatus").click(function() {
        $("#modalChangeStatus").modal();
    });

    $("#btnConfirmChangeStatus").click(function () {

        if (@Model.StatusID == statusOngoing)
        {
            $.ajax({
                method: "POST",
                url: "/Appointments/UpdatePatientInfo/",
                data: {
                    appointmentID : @Model.AppointmentID,
                    allergies : $("#allergies").val(),
                    familyMedicalHistory : $("#familyMedicalHistory").val(),
                    longTermMedication : $("#longTermMedication").val(),
                    anamnesis : $("#anamnesis").val()
                },
                success: function () {
                    $.ajax({
                        method: "POST",
                        url: "/Appointments/ConfirmChangeStatus/",
                        data: {
                            appointmentID : @Model.AppointmentID,
                            currStatusID : @Model.StatusID
                            },
                        success: function () {
                            location.reload();
                        }
                    })
                }
            })
        }
        else 
        {
            $.ajax({
                method: "POST",
                url: "/Appointments/ConfirmChangeStatus/",
                data: {
                    appointmentID : @Model.AppointmentID,
                    currStatusID : @Model.StatusID
                    },
                success: function () {
                    location.reload();
                }
            })
        }
    });

    $("#btnCancel").click(function () {
        $("#modalCancel").modal();
    });

    $("#btnConfirmCancel").click(function () {
        $.ajax({
            method: "POST",
            url: "/Appointments/ConfirmCancel/",
            data: {
                id : @Model.AppointmentID
                },
            success: function () {
                location.reload();
            }
        })
    });

    $("#btnUpdatePatientInfo").click(function () {
        $.ajax({
            method: "POST",
            url: "/Appointments/UpdatePatientInfo/",
            data: {
                appointmentID : @Model.AppointmentID,
                allergies : $("#allergies").val(),
                familyMedicalHistory : $("#familyMedicalHistory").val(),
                longTermMedication : $("#longTermMedication").val(),
                anamnesis : $("#anamnesis").val()
            },
            success: function () {
                $("#modalSucess").modal();
            }
        })
    });

    //$(document).on('click', '#btnAddInLine', function () {
    $("#btnAddInline").click(function () {
        $.ajax({
            method: "POST",
            url: "/PrescriptedMedicines/Add/",
            data: {
                appointmentID : @Model.AppointmentID,
                medicineID : $("#medicineSelector").val(),
                posology : $("#posology").val()
            },
            success: function (){
                reloadPrescribedMedicines();
            }
        })
    });

    function reloadPrescribedMedicines() {
        $.ajax(
        {
            type: 'GET',
            url: '/PrescriptedMedicines/ListMedicinesByAppointment',
            data: {
                appointmentID: @Model.AppointmentID
            },
            dataType: 'html',
            cache: false,
            async: true,
            success: function (data) {
                $('#MedicinesByAppointment').html(data);
            }
        });

        //$(".selectpicker").selectpicker()
    }
})
</script>
}
