@model MedicalMgmt.ViewModels.SelectPhysicianData

@{
    ViewBag.Title = "Marcar consulta";
}

<h2>Marcar consulta</h2>
<h5>Selecione o profissional desejado</h5>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.Users.fin)*@
            Médico
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Expertise)*@
            Especialidade
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Physicians)
    {
        string selectedRow = "";
        if (item.PhysicianID == ViewBag.PhysicianID)
        {
            Model.Appointment.PhysicianID = item.PhysicianID;
            selectedRow = "success";
        }
        <tr class="@selectedRow">
            <td>
                @Html.DisplayFor(modelItem => item.User.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Expertise)
            </td>
            <td>
                @Html.ActionLink("Selecionar", "CreateAppointment", new { patientID = ViewBag.PatientID, physicianID = item.PhysicianID })
            </td>
        </tr>
    }

</table>

@if (Model.Appointment.PhysicianID != null && Model.Appointment.PhysicianID > 0)
{
    @*<h5>@Html.ViewBag.PatientID</h5>
    <h5>@Html.ViewBag.PhysicianID</h5>*@
    @*<div id="datetimepicker">
    </div>*@
    <div>
        @*<input type="submit" value="Marcar consulta" class="btn btn-primary" />*@
        @*@Html.ActionLink("Marcar consulta", "Create", 
                         new { controller = "Appointment", 
                               patientID = ViewBag.PatientID, 
                               physicianID = ViewBag.PhysicianID },
                               startTime = 
                               new { @class="btn btn-primary" })*@
        @using (Html.BeginForm("Create", "Appointments"))
        {
            @Html.AntiForgeryToken()
            //foreach (var item in Model.Physicians)
            //{
            //    if (item.PhysicianID == ViewBag.PhysicianID)
            //    {
            //        Model.Appointment.PhysicianID = item.PhysicianID;
            //    }
            //}
            Model.Appointment.PatientID = Model.Patient.PatientID;
            
            @Html.HiddenFor(model => model.Appointment.PatientID)
            @Html.HiddenFor(model => model.Appointment.PhysicianID)
            @Html.EditorFor(model => model.Appointment.PlannedStartDate, new { htmlAttributes = new { @Value = DateTime.Now, @id="PlannedStartDate", @class = "form-control datepicker" } })
            <input type="submit" value="Marcar consulta" class="btn btn-primary" />
        }
    </div>
    
}
    
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.datetimepicker.css" /> >
    <script src="~/Scripts/jquery-1.12.4.js"></script>
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            var a = '08:00';
            @*var lala = '@Model.Appointment.PhysicianID';*@
            $('#PlannedStartDate').datetimepicker({

                onGenerate: function (ct) {
                    jQuery(this).find('.xdsoft_date.xdsoft_weekend')
                      .addClass('xdsoft_disabled');
                },

                allowTimes: [
                    '15:00',
                    '16:00'
                ],

                //https://stackoverflow.com/questions/16361364/accessing-mvcs-model-property-from-javascript
                //https://stackoverflow.com/questions/20471511/how-to-get-data-from-model-to-javascript-mvc-4
                onSelectDate: function (ct, $i) {
                    $.ajax({
                        method: "GET",
                        url: "/Appointments/GetByPhysicianIdAndDate/",
                        data: {
                            physicianID: '@Model.Appointment.PhysicianID',
                            selectedDate: ct.dateFormat('Y/m/d')
                        },
                        success: function (response) {
                            $('#PlannedStartDate').datetimepicker({ allowTimes: response })
                        }

                    })

                    //var aa = ['09:40', '10:00']
                    //aa.push('10:20')
                    //$('#PlannedStartDate').datetimepicker({allowTimes: aa})
                },

                inline: true,

                minDate: 0,

                minTime: a,

                maxTime: '18:00',

                //disabledDates: '24.01.2018 09:00',

                step: 20,

                lang: 'pt-BR'
            });
        });

    });

    </script>

}
