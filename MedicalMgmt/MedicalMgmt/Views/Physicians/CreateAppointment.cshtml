@model MedicalMgmt.ViewModels.SelectPhysicianData

@{
    ViewBag.Title = "Marcar consulta";
}

<h2>Marcar consulta</h2>
<h5>Selecione o profissional desejado</h5>
<select id="physicianSelector" class="selectpicker filter" data-live-search="true" title="Selecionar médico...">
    @foreach (var item in ViewBag.PhysicianList)
    {
        <option value="@item.PhysicianID">@item.AppUser.FullName</option>
    }
</select>
<select id="expertiseSelector" class="selectpicker filter" data-live-search="true" title="Selecionar especialidade...">
    @foreach (var item in ViewBag.PhysicianList)
    {
        <option value="@item.Expertise">@item.Expertise</option>
    }
</select>
<input type="submit" value="Pesquisar" class="btn btn-default" id="btnSearch" />


<div id="filteredPhysicians">
    <table class="table">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Users.fin)*@
                Médico
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Expertise)*@
                Especialidade
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Physicians)
        {
            string selectedRow = "";
            if (item.PhysicianID == ViewBag.PhysicianID)
            {
                Model.Appointment.PhysicianID = item.PhysicianID;
                selectedRow = "success";
            }
            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.AppUser.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Expertise)
                </td>
                <td>
                    @*@Html.ActionLink("Selecionar", "CreateAppointment", new { patientID = ViewBag.PatientID, physicianID = item.PhysicianID })*@
                    <input type="submit" value="Selecionar" class="btn btn-default btnSelectPhysician" id="@item.PhysicianID" />
                </td>
            </tr>
        }

    </table>
</div>

@*@if (Model.Appointment.PhysicianID != null && Model.Appointment.PhysicianID > 0)
{
    <div>
        @using (Html.BeginForm("Create", "Appointments"))
        {
            @Html.AntiForgeryToken()
            //Model.Appointment.PatientID = Model.Patient.PatientID;
            
            @Html.HiddenFor(model => model.Appointment.PatientID)
            @Html.HiddenFor(model => model.Appointment.PhysicianID)
            @Html.EditorFor(model => model.Appointment.PlannedStartDate, new { htmlAttributes = new { @Value = DateTime.Now, @id="PlannedStartDate", @class = "form-control datepicker" } })
            <input type="submit" value="Marcar consulta" class="btn btn-primary" />
        }
    </div>
    
}*@

<div id="selectDateTime" hidden="hidden">
    @using (Html.BeginForm("Create", "Appointments"))
    {
        @Html.AntiForgeryToken()
        //Model.Appointment.PatientID = Model.Patient.PatientID;
            
        @Html.HiddenFor(model => model.Appointment.PatientID)
        @Html.EditorFor(model => model.Appointment.PhysicianID, new { htmlAttributes = new { @id = "hiddenPhysician", @hidden = "hidden" } })
        @Html.EditorFor(model => model.Appointment.PlannedStartDate, new { htmlAttributes = new { @Value = DateTime.Now, @id = "PlannedStartDate", @class = "form-control datepicker" } })
        <input type="submit" value="Marcar consulta" class="btn btn-primary" id="btnCreateAppointment" />
    }
</div>
    
@Styles.Render("~/Content/bootstrap-select.min.css")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-select.min.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/jquery.datetimepicker.css" />
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script type="text/javascript">
    $(document).ready(function () {

        $("#btnSearch").click(function () {
            //var id = $(this).attr("id");

            $.ajax(
                {
                    type: "GET",
                    data: {
                        patientID: @ViewBag.PatientID,
                        physicianID: $("#physicianSelector").val(),
                        expertise: $("#expertiseSelector").val()
                    },
                    dataType: "html",
                    url: "/Physicians/FilteredPhysicians/",
                    success: function (result) {
                        $("#filteredPhysicians").html(result);
                        reloadSelectButtons();
                    },

                    error: function (error) {
                        alert("Fail");
                    }
                });
        });

        reloadSelectButtons();



        function reloadSelectButtons () {
            
            $('#PlannedStartDate').datetimepicker('reset');
            $('#selectDateTime').prop("hidden", true);

            $(".btnSelectPhysician").click(function() {
                
                $('#PlannedStartDate').datetimepicker('reset');

                var physicianID = this.id;
                $('#hiddenPhysician').val(physicianID);

                $(function () {
                    $('#PlannedStartDate').datetimepicker({

                        allowTimes: [
                            $.ajax({
                                method: "GET",
                                url: "/Appointments/GetByPhysicianIdAndDate/",
                                data: {
                                    physicianID: physicianID,
                                    selectedDate: new Date().dateFormat('Y/m/d')
                                },
                                success: function (response) {
                                    $('#PlannedStartDate').datetimepicker({ allowTimes: response })
                                },
                                fail: function () {
                                    alert("lala");
                                }
                            })
                        ],

                        onGenerate: function (ct) {
                            jQuery(this).find('.xdsoft_date.xdsoft_weekend')
                              .addClass('xdsoft_disabled');
                        },

                        //https://stackoverflow.com/questions/16361364/accessing-mvcs-model-property-from-javascript
                        //https://stackoverflow.com/questions/20471511/how-to-get-data-from-model-to-javascript-mvc-4
                        onSelectDate: function (ct, $i) {
                            $.ajax({
                                method: "GET",
                                url: "/Appointments/GetByPhysicianIdAndDate/",
                                data: {
                                    physicianID: physicianID,
                                    selectedDate: ct.dateFormat('Y/m/d')
                                },
                                success: function (response) {
                                    $('#PlannedStartDate').datetimepicker({ allowTimes: response })
                                },
                                fail: function () {
                                    alert("lala");
                                }
                            })
                        },

                        inline: true,

                        minDate: 0,

                        //minTime: a,

                        //maxTime: '18:00',

                        //disabledDates: '24.01.2018 09:00',

                        step: 20,

                        lang: 'pt-BR'
                    });
                });

                $('#selectDateTime').prop("hidden", false);

            });
        };

    });

</script>

}
